{
    "openapi": "3.0.0",
    "info": {
        "title": "Pay with PayPal",
        "description": "API for managing user registration and wallet creation.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost/api",
            "description": "Local API server"
        },
        {
            "url": "http://localhost/api",
            "description": "Local API server"
        },
        {
            "url": "http://localhost/api",
            "description": "Local API server"
        }
    ],
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate a user and generate a token",
                "operationId": "bc76a9d52929cab7a147ca7b5c527430",
                "requestBody": {
                    "description": "User login credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout a user and revoke their token",
                "operationId": "0ab4e3cf7bc4f7ec81b48f7928c7de7c",
                "requestBody": {
                    "description": "Revoke user tokens",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logout successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user and create a wallet",
                "operationId": "18235ea6963e661c49bf381065779d6a",
                "requestBody": {
                    "description": "User registration details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Registration successful"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.doe@example.com"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "wallet": {
                                            "properties": {
                                                "balance": {
                                                    "type": "integer",
                                                    "example": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/wallet/paypal": {
            "post": {
                "tags": [
                    "PayPal"
                ],
                "summary": "Create a PayPal payment",
                "description": "Initiate a payment request with PayPal and redirect to approval URL.",
                "operationId": "createPayPalPayment",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "amount": {
                                        "description": "Amount to be paid",
                                        "type": "number",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "302": {
                        "description": "Redirects to PayPal approval page"
                    },
                    "400": {
                        "description": "Invalid amount"
                    },
                    "500": {
                        "description": "Payment creation failed"
                    }
                }
            }
        },
        "/api/wallet/paypal/success": {
            "get": {
                "tags": [
                    "PayPal"
                ],
                "summary": "Handle successful PayPal payment",
                "description": "Capture and finalize the payment after PayPal approval.",
                "operationId": "handlePayPalSuccess",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Token for the PayPal payment",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment completed successfully"
                    },
                    "400": {
                        "description": "Unable to retrieve payment amount"
                    },
                    "500": {
                        "description": "Payment failed"
                    }
                }
            }
        },
        "/api/wallet/paypal/cancel": {
            "get": {
                "tags": [
                    "PayPal"
                ],
                "summary": "Handle cancelled PayPal payment",
                "description": "Redirects back to the application after the payment was cancelled.",
                "operationId": "handlePayPalCancel",
                "responses": {
                    "200": {
                        "description": "Payment cancelled"
                    }
                }
            }
        },
        "/api/profile": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Retrieve the user's profile information",
                "operationId": "21d26f16795aefad77fc3cf09e8a7c65",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "type": "object"
                                        },
                                        "wallet": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Profile"
                ],
                "summary": "Update the user's profile information",
                "operationId": "b927bf00923c712a27589c6a510ebbf5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Profile"
                ],
                "summary": "Delete the user's account",
                "operationId": "3c62733109c5499344671a2ac26a1507",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Account deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Account deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/wallet/balance": {
            "get": {
                "tags": [
                    "Wallet"
                ],
                "summary": "Get wallet balance",
                "description": "Retrieve the current balance of the authenticated user's wallet.",
                "operationId": "getWalletBalance",
                "responses": {
                    "200": {
                        "description": "Balance retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "balance": {
                                            "type": "number",
                                            "example": 100.5
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/wallet/deduct": {
            "post": {
                "tags": [
                    "Wallet"
                ],
                "summary": "Deduct wallet balance",
                "description": "Deduct a specified amount from the authenticated user's wallet.",
                "operationId": "deductWalletBalance",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "amount": {
                                        "description": "Amount to be deducted",
                                        "type": "number",
                                        "example": 50
                                    },
                                    "description": {
                                        "description": "Reason for deduction",
                                        "type": "string",
                                        "example": "Purchase of a service"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment successful."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Insufficient wallet balance",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Insufficient wallet balance."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred during the payment process",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred during the payment process."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "PayPal",
            "description": "API for handling PayPal payments"
        },
        {
            "name": "Wallet",
            "description": "API for wallet operations including balance inquiry and deduction"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Profile",
            "description": "Profile"
        }
    ]
}